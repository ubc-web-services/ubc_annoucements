<?php

/**
 * @file
 * Contains ubc_layout_config.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function ubc_layout_config_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ckeditor_entity_link module.
    case 'help.page.ubc_layout_config':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('To come...') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
 // Add theme hook suggestions for page
 function ubc_layout_config_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  // revision IDs are strings and node ids are strings when a revision is loaded.
  // https://www.drupal.org/node/2521876#comment-12144221
  $revision = \Drupal::routeMatch()->getRawParameter('node_revision');
  if ($node) {
    if ($revision) {
      $revised_node = \Drupal::entityTypeManager()
                              ->getStorage('node')
                              ->loadRevision($revision);
      $content_type = $revised_node->bundle();
    }
    else {
      $content_type = $node->bundle();
    }
    // load the active layout from the settings
    $config = \Drupal::config('ubc_layout_config.' . $content_type . '_settings');
    $activeLayout = $config->get('layout');
    if (isset($activeLayout)) {
      // add the suggestion
      $suggestions[] = 'page__' . $activeLayout . '__' . $content_type; 
    }
  }
  //return $suggestions;
  //$request = \Drupal::routeMatch()->getRouteObject();
  //kint($request);
}

 // Add theme hook suggestions for node
 function ubc_layout_config_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  // add the array of types
  $node_types = array('ubc_page', 'ubc_homepage', 'ubc_announcement', 'ubc_landing_page');
  // find the current node's type
  $node_type = $variables['elements']['#node']->getType();
  // load the active layout from the settings
  $config = \Drupal::config('ubc_layout_config.' . $node_type . '_settings');
  $activeLayout = $config->get('layout');
  if (isset($activeLayout) && $variables['elements']['#view_mode'] == 'full' && in_array($node_type, $node_types)) {
    $suggestions[] = 'node__' . $activeLayout . '__' . $node_type;
  }
  //return $suggestions;
}


/**
 * Implements hook_form_alter().
 */
function ubc_layout_config_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (($form_id == 'ubc_layout_config_general') || ($form_id == 'ubc_layout_config_homepage') || ($form_id == 'ubc_layout_config_landing_page') || ($form_id == 'ubc_layout_config_announcement') || ($form_id == 'ubc_layout_config_page')) {
    // attach form-specific js
    $form['#attached']['library'][] = 'ubc_layout_config/layout_form';
  return $form;
  }
}
