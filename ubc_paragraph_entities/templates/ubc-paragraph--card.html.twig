{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set card_attributes = create_attribute() %}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    'auto-grid__cell',
    'my-8',
  ]
%}
{%
  set card_classes = [
    paragraph.field_paragraph_card_color.value|clean_class,
    paragraph.field_paragraph_card_layout.value|clean_class,
    'ubc-card ubc-card--shadow text-black hover--no-underline group'
  ]
%}
{# set variable to tell us if the link entire card option is enabled #}
{%
  set card_link = paragraph.field_paragraph_card_link_entire.0.value
%}
{%
  set current_layout = paragraph.field_paragraph_card_layout.value
%}
{%
  set bg_img = file_url(content.field_paragraph_card_image['#items'].entity.uri.value|image_style('max_650x650'))
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {% if card_link == false %}
        <div{{ card_attributes.addClass(card_classes) }}>
      {% else %}
        <a{{ card_attributes.addClass(card_classes) }} href="{{ paragraph.field_paragraph_card_link.0.url }}">
      {% endif %}
      {% if current_layout == 'ubc-card--vert' %}
        <div class="ubc-card__media">
          {{ content.field_paragraph_card_image.0 }}
        </div>
      {% endif %}
      {% if current_layout == 'ubc-card--horiz-media' or 'ubc-card--horiz-media-r' %}
        <div class="ubc-card__media bg-cover" style="background-image: url({{ bg_img }});">
        </div>
      {% endif %}
      <div class="ubc-card__content">
        {% if paragraph.field_paragraph_card_meta.value|render %}
          <div class="card__meta">
            {{ paragraph.field_paragraph_card_meta.value }}
          </div>
        {% endif %}
        <h2 class="card__title">{{ paragraph.field_paragraph_card_title.value }}</h2>
        <p>{{ paragraph.field_paragraph_card_text.value }}</p>
      </div>
      <div class="ubc-card__actions text-right">
        {% if card_link == false %}
        <a class="unit-button unit-button--has-icon-right unit-button--animate-icon" href="{{ paragraph.field_paragraph_card_link.0.url }}" title="{{ paragraph.field_paragraph_card_link.0.title }}"> {{ paragraph.field_paragraph_card_link.0.title }}
          <svg role="presentation" class="unit-button__icon" viewBox="0 0 64 64">
            <use xlink:href="#icon-arrow-circle"></use>
          </svg>
        </a>
        {% else %}
        <p class="unit-button unit-button--has-icon-right unit-button--animate-icon text-hug"> {{ paragraph.field_paragraph_card_link.0.title }}
          <svg role="presentation" class="unit-button__icon" viewBox="0 0 64 64">
            <use xlink:href="#icon-arrow-circle"></use>
          </svg>
        </p>
      {% endif %}
      </div>
    {% if card_link == false %}
    </div>
    {% else %}
    </a>
    {% endif %}
    {# content #}
    {% endblock %}
  </div>
{% endblock paragraph %}



