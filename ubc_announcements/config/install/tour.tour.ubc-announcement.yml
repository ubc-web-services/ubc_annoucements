# This file defines the tour for our example page. There should be one tour
# file for each tour that you create. These tour files should be placed in a
# module's 'config' folder and named using the pattern
# 'tour.tour.{tour-id}.yml'.
#
# Each tour file has two parts: 1) The tour properties, and 2) the tip
# definitions.
#
#
# TOUR PROPERTIES
#
# The tour properties define information that applies to the tour as a whole.
# Properties that you can define for your tours include the following:
#
#   id:         Each tour should have a unique ID. This id is used in the
#               filename and appears as an ID in the HTML.
#   module:     The machine name of the module containing your tour.
#   label:      A human readable name for the tour.
#   status:     A boolean, defining whether the tour is enabled.
#   langcode:   A two-letter language code defining the language of your tour.
#   routes:     An array of routes for which the tour is active. Specify these
#               as an array with route_name and optional route_params (also an
#               array). Route names are found in each module's routing.yml file.
#
#
# TIP DEFINITIONS
#
# Here, you define each tip that you want to appear in your tour. Each of
# the tips have properties that must be defined, including the following:
#
#   id:         Each tip needs a unique ID. This appears as an ID in the HTML.
#   plugin:     The Tour API uses plugins for defining different types of
#               tips. The 'text' plugin (for making text tooltips) is provided
#               in core, but developers can define additional plugins for tips
#               containing images, video, or other interactions.
#   label:      The lable for the tip. This will be rendered in an h3 element.
#   body:       The body of the tip. HTML markup is allowed.
#   weight:     Tips within a tour are ordered by weight, beginning with the
#               lowest number. Negative values are acceptable.
#   location:   Defines the location of the tip, relative to its target.
#               Acceptable values include: top, bottom, left, & right. If the
#               location is not defined, the default value (bottom) will be
#               used.
#   attributes: Attributes provdied to the tip for various purposes. Use the
#               following attributes to control the placement of the tip:
#
#                 data-id:      Places this tip on the DOM element containing
#                               this ID.
#                 data-class:   Places this tip on the DOM element containing
#                               this class.
#
#               If you omit both the .data-id and .data-class, the tip will be
#               shown as modal instead of being targeted to an element.
#
langcode: en
status: true
dependencies:
  module:
    - ubc_announcement
id: ubc-announcement
label: 'UBC Announcement Tour'
module: ubc_announcement
#routes:
#  -
#    route_name: 'node.add'
#    route_name: 'entity.node.edit_form'
#  - route_params: 'announcement'
#paths:
#  - node/add/announcement
#  - node/edit/announcement
routes:
  -
    route_name: node.add
    route_params:
      node_type: 'announcement'
  -
    route_name: entity.node.edit_form
    route_params:
      node_type: 'announcement'
tips:
  wow:
    id: wow
    plugin: text
    label: Wow
    weight: -100
    attributes: null
    body: 'Works?'
    location: top
  still-working-:
    id: still-working-
    plugin: text
    label: 'Still working?'
    weight: -99
    attributes:
      data-id: edit-title-0-value
    body: 'This is required. Used for path. Make it so. Or  go to the <a href=''/admin/content?tour'' class=''button button--primary''>content tour</a>'
    location: top
  published-:
    id: published-
    plugin: text
    label: 'Published?'
    weight: -98
    attributes:
      data-id: edit-meta
    body: 'Content metadata about it''s current status. You can also add information about any updates you make to the content in the textarea here. This will help in tracking changes between revisions.'
    location: top
  edit-menu:
    id: edit-menu
    plugin: text
    label: 'Edit Menu'
    weight: -97
    attributes:
      data-id: edit-menu
    body: 'Add the page to the menu.'
    location: top
  path-settings:
    id: path-settings
    plugin: text
    label: 'Path Settings'
    weight: -96
    attributes:
      data-id: edit-path-settings
    body: 'Here you can change the default path settings (usually menu trail, followed by the title).'
    location: top
  author-information:
    id: author-information
    plugin: text
    label: 'Author information'
    weight: -95
    attributes:
      data-id: edit-author
    body: 'Tracks who created the content and when.'
    location: left
  publishing-options:
    id: publishing-options
    plugin: text
    label: 'Publishing Options'
    weight: -94
    attributes:
      data-id: edit-options
    body: 'Additional, rarely-used options, such as promoted to front page and sticky at the top of lists.'
    location: top
  save:
    id: save
    plugin: text
    label: Save
    weight: -93
    attributes:
      data-id: edit-actions
    body: 'Save an publish.'
    location: top
